# -*- coding: utf-8 -*-
"""YouTube Lyrics Downloader

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yu_meg5fEINi9_L1Pv7qTwipP_5UlMeG
"""

import streamlit as st
from youtube_transcript_api import YouTubeTranscriptApi
from urllib.parse import urlparse, parse_qs

def extract_video_id(url):
    """
    Extracts the YouTube video ID from a given URL.
    Handles both standard youtube.com and shortened youtu.be URLs.

    Args:
        url (str): The YouTube video URL.

    Returns:
        str: The extracted video ID, or None if the URL is invalid.
    """
    try:
        if "youtu.be" in url:
            return url.split("/")[-1].split("?")[0]

        query = urlparse(url).query
        params = parse_qs(query)

        if "v" in params:
            return params["v"][0]
    except Exception:
        return None
    return None

def get_lyrics(video_id):
    """
    Fetches the transcript (lyrics) for a given YouTube video ID.

    Args:
        video_id (str): The ID of the YouTube video.

    Returns:
        str: The extracted lyrics as a single string, or an error message.
    """
    try:
        # Get the transcript directly from the imported function.
        transcript = YouTubeTranscriptApi.get_transcript(video_id, languages=['en', 'en-US'])

        # Join the transcript entries into a single block of text
        lyrics = " ".join([entry['text'] for entry in transcript])
        return lyrics
    except Exception as e:
        return f"Error: Could not retrieve transcript. This may be due to no captions being available for this video or the video being a live stream. Details: {e}"

def main():
    """
    The main Streamlit application function.
    """
    st.set_page_config(page_title="YouTube Lyrics Downloader", page_icon="ðŸŽµ")
    st.title("YouTube Lyrics Downloader ðŸŽµ")
    st.markdown("Enter a YouTube video URL to extract and download its lyrics.")


    # Text input for the YouTube URL
    youtube_url = st.text_input(
        "YouTube Video URL",
        placeholder="e.g., https://www.youtube.com/watch?v=dQw4w9WgXcQ"
    )

    # Button to trigger the lyrics extraction process
    if st.button("Get Lyrics"):
        if youtube_url:
            with st.spinner('Extracting lyrics...'):
                video_id = extract_video_id(youtube_url)
                if video_id:
                    lyrics = get_lyrics(video_id)

                    if not lyrics.startswith("Error"):
                        st.success("Lyrics extracted successfully! ðŸŽ‰")
                        st.subheader("Extracted Lyrics")

                        # Display the lyrics in a text area
                        st.text_area("Lyrics", lyrics, height=400)

                        # Provide a download button for the lyrics
                        st.download_button(
                            label="Download Lyrics as .txt file",
                            data=lyrics,
                            file_name="lyrics.txt",
                            mime="text/plain"
                        )
                    else:
                        st.error(lyrics)
                else:
                    st.error("Invalid YouTube URL. Please enter a valid URL.")
        else:
            st.warning("Please enter a YouTube URL to proceed.")

if __name__ == "__main__":
    main()